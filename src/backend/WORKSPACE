workspace(name = "repo")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_jvm_external",
    sha256 = "f36441aa876c4f6427bfb2d1f2d723b48e9d930b62662bf723ddfb8fc80f0140",
    strip_prefix = "rules_jvm_external-4.1",
    url = "https://github.com/bazelbuild/rules_jvm_external/archive/4.1.zip",
)

load("@rules_jvm_external//:defs.bzl", "artifact", "maven_install")
load("@rules_jvm_external//:specs.bzl", "maven")

rules_kotlin_version = "1.7.1"
rules_kotlin_sha = "fd92a98bd8a8f0e1cdcb490b93f5acef1f1727ed992571232d33de42395ca9b3"
http_archive(
    name = "io_bazel_rules_kotlin",
    urls = ["https://github.com/bazelbuild/rules_kotlin/releases/download/v%s/rules_kotlin_release.tgz" % rules_kotlin_version],
    sha256 = rules_kotlin_sha,
)

load("@io_bazel_rules_kotlin//kotlin:repositories.bzl", "kotlin_repositories")
kotlin_repositories()

load("@io_bazel_rules_kotlin//kotlin:core.bzl", "kt_register_toolchains")
register_toolchains("//common/common-api:kotlin_toolchain")

http_archive(
    name = "rules_java",
    sha256 = "ccf00372878d141f7d5568cedc4c42ad4811ba367ea3e26bc7c43445bbc52895",
    strip_prefix = "rules_java-d7bf804c8731edd232cb061cb2a9fe003a85d8ee",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_java/archive/d7bf804c8731edd232cb061cb2a9fe003a85d8ee.tar.gz",
        "https://github.com/bazelbuild/rules_java/archive/d7bf804c8731edd232cb061cb2a9fe003a85d8ee.tar.gz",
    ],
)

load("@rules_java//java:repositories.bzl", "rules_java_dependencies", "rules_java_toolchains")

rules_java_dependencies()

rules_java_toolchains()

http_archive(
    name = "rules_proto",
    sha256 = "602e7161d9195e50246177e7c55b2f39950a9cf7366f74ed5f22fd45750cd208",
    strip_prefix = "rules_proto-97d8af4dc474595af3900dd85cb3a29ad28cc313",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/97d8af4dc474595af3900dd85cb3a29ad28cc313.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/97d8af4dc474595af3900dd85cb3a29ad28cc313.tar.gz",
    ],
)

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

http_archive(
    name = "com_google_protobuf",
    sha256 = "c96e8f755b278dc885fad43ec6afcb6e8345d2b5eb823ea717229076c17ca779",
    strip_prefix = "protobuf-3.14.x",
    url = "https://github.com/protocolbuffers/protobuf/archive/3.14.x.zip",
)

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")

protobuf_deps()

http_archive(
    name = "rules_spring",
    sha256 = "9385652bb92d365675d1ca7c963672a8091dc5940a9e307104d3c92e7a789c8e",
    url = "https://github.com/salesforce/rules_spring/releases/download/2.1.4/rules-spring-2.1.4.zip",
)

maven_install(
    name = "maven",
    artifacts = [
        maven.artifact(
            group = "it.ozimov",
            artifact = "embedded-redis",
            version = "0.7.3",
            exclusions = ["org.slf4j:slf4j-simple"]
        ),
        maven.artifact("com.google.guava", "guava", "31.1-jre"),
        maven.artifact("org.apache.httpcomponents", "httpclient", "4.5.13"),
        maven.artifact("org.springframework.cloud", "spring-cloud-openfeign-core", "3.0.3"),
        maven.artifact("com.tencent.devops","devops-boot-starter-plugin","0.0.6"),
        maven.artifact("io.swagger", "swagger-annotations", "1.5.20"),
        maven.artifact("io.swagger", "swagger-models", "1.5.20"),
        maven.artifact("com.fasterxml.jackson.module", "jackson-module-kotlin", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.datatype", "jackson-datatype-jdk8", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.datatype", "jackson-datatype-jsr310", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.dataformat", "jackson-dataformat-yaml", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.dataformat", "jackson-dataformat-xml", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.module", "jackson-module-parameter-names", "2.12.6"),
        maven.artifact("org.apache.commons", "commons-compress", "1.21"),
        maven.artifact("org.springframework.boot","spring-boot-starter-data-mongodb","2.5.13"),
        maven.artifact("org.apache.commons","commons-lang3","3.12.0"),
        maven.artifact("net.javacrumbs.shedlock","shedlock-spring","4.12.0"),
        maven.artifact(
            group = "net.javacrumbs.shedlock",
            artifact = "shedlock-provider-mongo",
            version = "4.12.0",
            exclusions = ["org.mongodb:mongo-java-driver"]
        ),
        maven.artifact("cn.hutool", "hutool-crypto", "5.5.4"),
        maven.artifact("org.springframework.boot","spring-boot-starter-data-redis","2.5.11"),
        maven.artifact("com.tencent.devops","devops-circuitbreaker","0.0.6"),
        maven.artifact("com.tencent.devops","devops-service","0.0.6"),
        maven.artifact("io.github.resilience4j","resilience4j-bulkhead","1.7.0"),
        maven.artifact("io.micrometer","micrometer-registry-influx","1.7.11"),
        maven.artifact("io.jsonwebtoken","jjwt-api","0.11.2"),
        maven.artifact("io.jsonwebtoken","jjwt-impl","0.11.2"),
        maven.artifact("io.jsonwebtoken","jjwt-jackson","0.11.2"),
        maven.artifact(
            group = "org.springframework.cloud",
            artifact = "spring-cloud-starter-sleuth",
            version = "3.0.3",
            exclusions = ["org.springframework.cloud:spring-cloud-sleuth-brave"]
        ),
        maven.artifact("org.springframework.cloud","spring-cloud-sleuth-otel-autoconfigure","1.0.0-M13"),
        maven.artifact("io.opentelemetry","opentelemetry-sdk-extension-resources","1.9.0"),
        maven.artifact("io.opentelemetry","opentelemetry-exporter-otlp","1.9.0"),
        maven.artifact("org.mockito.kotlin","mockito-kotlin","4.0.0"),
        maven.artifact("org.springframework.cloud","spring-cloud-commons","3.0.3"),
        maven.artifact("org.springframework.cloud","spring-cloud-loadbalancer","3.0.3"),
        maven.artifact("com.tencent.devops","devops-boot-gradle-plugin", "0.0.6"),
        maven.artifact("org.springframework.boot", "spring-boot-loader", "2.5.13"),
        maven.artifact("org.springframework", "spring-webmvc", "5.3.19"),
        maven.artifact("org.springframework", "spring-web", "5.3.19", neverlink = True),
        maven.artifact("com.google.code.gson", "gson", "2.9.0"),
        maven.artifact("org.eclipse.jgit", "org.eclipse.jgit.http.server", "5.11.0.202103091610-r"),
        maven.artifact("org.eclipse.jgit", "org.eclipse.jgit.junit", "5.11.0.202103091610-r"),
        maven.artifact("de.flapdoodle.embed", "de.flapdoodle.embed.mongo", "3.0.0"),
        maven.artifact("org.yaml", "snakeyaml", "1.28"),
        maven.artifact("com.github.zafarkhaja", "java-semver", "0.9.0"),
        maven.artifact("io.micrometer", "micrometer-registry-prometheus", "1.7.11"),
        maven.artifact("org.springframework.boot", "spring-boot-starter-test", "2.5.13"),
        maven.artifact("io.mockk", "mockk", "1.12.2"),
        maven.artifact("commons-codec","commons-codec","1.15"),
        maven.artifact("commons-io","commons-io","2.11.0"),
        maven.artifact("org.springframework.retry","spring-retry","1.3.3"),
        maven.artifact("org.springframework.boot","spring-boot-starter-aop","2.5.13"),
        maven.artifact("com.amazonaws","aws-java-sdk-s3","1.11.700"),
        maven.artifact("com.squareup.okhttp3","okhttp","4.9.0"),
        maven.artifact("com.tencent.polaris","polaris-discovery-factory","1.5.2"),
        maven.artifact("com.tencent.devops","devops-pulsar","0.0.6"),
        maven.artifact("org.springframework.cloud","spring-cloud-starter-stream-kafka","3.1.3"),
        maven.artifact("org.influxdb", "influxdb-java", "2.21"),
        maven.artifact("org.springframework.cloud", "spring-cloud-starter-consul-discovery", "3.0.3", neverlink = True),
        maven.artifact("org.springframework.cloud", "spring-cloud-starter-consul-config", "3.0.3", neverlink = True),
        maven.artifact("org.jsoup", "jsoup", "1.15.1"),
        maven.artifact("org.quartz-scheduler", "quartz", "2.3.2"),
        maven.artifact("de.flapdoodle.embed", "de.flapdoodle.embed.mongo", "3.0.0"),
        maven.artifact("org.apache.maven", "maven-repository-metadata", "3.8.2"),
        maven.artifact("org.apache.maven", "maven-model", "3.8.2"),
        maven.artifact("org.apache.maven", "maven-artifact", "3.8.2"),
        maven.artifact("javax.ws.rs", "jsr311-api", "1.1.1"),
        maven.artifact("org.glassfish.jersey.core", "jersey-server", "2.35"),
        maven.artifact("org.redline-rpm", "redline", "1.2.10"),
        maven.artifact("com.thoughtworks.xstream", "xstream", "1.4.19"),
        maven.artifact("org.apache.commons", "commons-text", "1.9"),
        maven.artifact("me.champeau.gradle.jmh", "me.champeau.gradle.jmh.gradle.plugin", "0.5.3"),
        maven.artifact("com.squareup.okhttp3", "okhttp-sse", "3.14.9"),
        maven.artifact("ch.qos.logback", "logback-classic", "1.2.10"),

        "org.jetbrains.kotlin:kotlin-reflect:1.5.31",
        "org.jetbrains.kotlin:kotlin-stdlib-common:1.5.31",
        "org.jetbrains.kotlin:kotlin-stdlib:1.5.31",
        "org.jetbrains.kotlin:kotlin-test-annotations-common:1.5.31",
        "org.jetbrains.kotlin:kotlin-test-junit:1.5.31",
        "org.jetbrains.kotlin:kotlin-test:1.5.31",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2",
        "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:1.5.2",
        "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2",
        "org.jetbrains.kotlinx:kotlinx-serialization-core-jvm:1.5.0",
        "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm:1.5.0",
        "org.jetbrains:annotations:24.0.0",
    ],
    repositories = [
        "https://repo1.maven.org/maven2/",
        "https://repo.spring.io/libs-milestone/",
        "https://mirrors.tencent.com/nexus/repository/maven-public",
        "https://plugins.gradle.org/m2/"
    ],
    excluded_artifacts = [
        "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin",
    ],
    use_unsafe_shared_cache = True,
)

maven_install(
    name = "fsmaven",
    artifacts = [
        maven.artifact(
            group = "it.ozimov",
            artifact = "embedded-redis",
            version = "0.7.3",
            exclusions = ["org.slf4j:slf4j-simple"]
        ),
        maven.artifact("com.google.guava", "guava", "31.1-jre"),
        maven.artifact("org.apache.httpcomponents", "httpclient", "4.5.13"),
        maven.artifact("org.springframework.cloud", "spring-cloud-openfeign-core", "3.0.3", neverlink = True),
        maven.artifact("io.github.openfeign", "feign-core", "11.6", neverlink = True),
        maven.artifact("com.tencent.devops","devops-boot-starter-plugin","0.0.6"),
        maven.artifact("io.swagger", "swagger-annotations", "1.5.20"),
        maven.artifact("io.swagger", "swagger-models", "1.5.20"),
        maven.artifact("com.fasterxml.jackson.module", "jackson-module-kotlin", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.datatype", "jackson-datatype-jdk8", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.datatype", "jackson-datatype-jsr310", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.dataformat", "jackson-dataformat-yaml", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.dataformat", "jackson-dataformat-xml", "2.12.6"),
        maven.artifact("com.fasterxml.jackson.module", "jackson-module-parameter-names", "2.12.6"),
        maven.artifact("org.apache.commons", "commons-compress", "1.21"),
        maven.artifact("org.springframework.boot","spring-boot-starter-data-mongodb","2.5.13"),
        maven.artifact("org.apache.commons","commons-lang3","3.12.0"),
        maven.artifact("net.javacrumbs.shedlock","shedlock-spring","4.12.0"),
        maven.artifact(
            group = "net.javacrumbs.shedlock",
            artifact = "shedlock-provider-mongo",
            version = "4.12.0",
            exclusions = ["org.mongodb:mongo-java-driver"]
        ),
        maven.artifact("cn.hutool", "hutool-crypto", "5.5.4"),
        maven.artifact("org.springframework.boot","spring-boot-starter-data-redis","2.5.11"),
        maven.artifact("com.tencent.devops","devops-circuitbreaker","0.0.6"),
        maven.artifact("com.tencent.devops","devops-service","0.0.6"),
        maven.artifact("io.github.resilience4j","resilience4j-bulkhead","1.7.0"),
        maven.artifact("io.micrometer","micrometer-registry-influx","1.7.11"),
        maven.artifact("io.jsonwebtoken","jjwt-api","0.11.2"),
        maven.artifact("io.jsonwebtoken","jjwt-impl","0.11.2"),
        maven.artifact("io.jsonwebtoken","jjwt-jackson","0.11.2"),
        maven.artifact(
            group = "org.springframework.cloud",
            artifact = "spring-cloud-starter-sleuth",
            version = "3.0.3",
            exclusions = ["org.springframework.cloud:spring-cloud-sleuth-brave"]
        ),
        maven.artifact("org.springframework.cloud","spring-cloud-sleuth-otel-autoconfigure","1.0.0-M13"),
        maven.artifact("io.opentelemetry","opentelemetry-sdk-extension-resources","1.9.0"),
        maven.artifact("io.opentelemetry","opentelemetry-exporter-otlp","1.9.0"),
        maven.artifact("org.mockito.kotlin","mockito-kotlin","4.0.0"),
        maven.artifact("org.springframework.cloud","spring-cloud-commons","3.0.3"),
        maven.artifact("org.springframework.cloud","spring-cloud-loadbalancer","3.0.3"),
        maven.artifact("com.tencent.devops","devops-boot-gradle-plugin", "0.0.6"),
        maven.artifact("org.springframework.boot", "spring-boot-loader", "2.5.13"),
        maven.artifact("org.springframework", "spring-webmvc", "5.3.19"),
        maven.artifact("org.springframework", "spring-web", "5.3.19", neverlink = True),
        maven.artifact("com.google.code.gson", "gson", "2.9.0"),

        "org.jetbrains.kotlin:kotlin-reflect:1.5.31",
        "org.jetbrains.kotlin:kotlin-stdlib-common:1.5.31",
        "org.jetbrains.kotlin:kotlin-stdlib:1.5.31",
        "org.jetbrains.kotlin:kotlin-test-annotations-common:1.5.31",
        "org.jetbrains.kotlin:kotlin-test-junit:1.5.31",
        "org.jetbrains.kotlin:kotlin-test:1.5.31",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1",
        "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:1.6.1",
        "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1",
        "org.jetbrains.kotlinx:kotlinx-serialization-core-jvm:1.5.0",
        "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm:1.5.0",
        "org.jetbrains:annotations:24.0.0",
    ],
    repositories = [
        "https://repo1.maven.org/maven2/",
        "https://repo.spring.io/libs-milestone/",
        "https://mirrors.tencent.com/nexus/repository/maven-public"
    ],
    excluded_artifacts = [
        "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin",
        "com.tencent.devops:devops-plugin-core",
        "com.tencent.devops:devops-web"
    ],
    use_unsafe_shared_cache = True,
)

http_archive(
    name = "rules_spring",
    sha256 = "7495e33261e4e69777a611e42c2e7a4f45021f6a8bb1eae1b064ca5653a61835",
    urls = [
        "https://github.com/salesforce/rules_spring/releases/download/2.2.2/rules-spring-2.2.2.zip",

    ],
)



